// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App /> should render correctly 1`] = `
<Wrapper>
  <Provider
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  >
    <App>
      <div>
        <Head>
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <SideEffect(NullComponent)
              defer={true}
              encodeSpecialCharacters={true}
            >
              <NullComponent
                defer={true}
                encodeSpecialCharacters={true}
              />
            </SideEffect(NullComponent)>
          </HelmetWrapper>
        </Head>
        <MuiProvider>
          <MuiThemeProvider
            theme={
              Object {
                "breakpoints": Object {
                  "between": [Function],
                  "down": [Function],
                  "keys": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                  "only": [Function],
                  "up": [Function],
                  "values": Object {
                    "lg": 1280,
                    "md": 960,
                    "sm": 600,
                    "xl": 1920,
                    "xs": 0,
                  },
                  "width": [Function],
                },
                "direction": "ltr",
                "mixins": Object {
                  "gutters": [Function],
                  "toolbar": Object {
                    "@media (min-width:0px) and (orientation: landscape)": Object {
                      "minHeight": 48,
                    },
                    "@media (min-width:600px)": Object {
                      "minHeight": 64,
                    },
                    "minHeight": 56,
                  },
                },
                "overrides": Object {},
                "palette": Object {
                  "action": Object {
                    "active": "rgba(0, 0, 0, 0.54)",
                    "disabled": "rgba(0, 0, 0, 0.26)",
                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                    "hover": "rgba(0, 0, 0, 0.08)",
                    "hoverOpacity": 0.08,
                    "selected": "rgba(0, 0, 0, 0.14)",
                  },
                  "augmentColor": [Function],
                  "background": Object {
                    "default": "#fafafa",
                    "paper": "#fff",
                  },
                  "common": Object {
                    "black": "#000",
                    "white": "#fff",
                  },
                  "contrastThreshold": 3,
                  "divider": "rgba(0, 0, 0, 0.12)",
                  "error": Object {
                    "contrastText": "#fff",
                    "dark": "#d32f2f",
                    "light": "#e57373",
                    "main": "#f44336",
                  },
                  "getContrastText": [Function],
                  "grey": Object {
                    "100": "#f5f5f5",
                    "200": "#eeeeee",
                    "300": "#e0e0e0",
                    "400": "#bdbdbd",
                    "50": "#fafafa",
                    "500": "#9e9e9e",
                    "600": "#757575",
                    "700": "#616161",
                    "800": "#424242",
                    "900": "#212121",
                    "A100": "#d5d5d5",
                    "A200": "#aaaaaa",
                    "A400": "#303030",
                    "A700": "#616161",
                  },
                  "primary": Object {
                    "contrastText": "#fff",
                    "dark": "#303f9f",
                    "light": "#7986cb",
                    "main": "#3f51b5",
                  },
                  "secondary": Object {
                    "contrastText": "#fff",
                    "dark": "#c51162",
                    "light": "#ff4081",
                    "main": "#f50057",
                  },
                  "text": Object {
                    "disabled": "rgba(0, 0, 0, 0.38)",
                    "hint": "rgba(0, 0, 0, 0.38)",
                    "primary": "rgba(0, 0, 0, 0.87)",
                    "secondary": "rgba(0, 0, 0, 0.54)",
                  },
                  "tonalOffset": 0.2,
                  "type": "light",
                },
                "props": Object {},
                "shadows": Array [
                  "none",
                  "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                  "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                  "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                  "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                  "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                  "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                  "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                  "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                  "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                  "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                  "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                  "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                  "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                  "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                  "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                  "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                  "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                  "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                  "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                  "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                  "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                  "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                  "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                  "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                ],
                "shape": Object {
                  "borderRadius": 4,
                },
                "spacing": Object {
                  "unit": 8,
                },
                "transitions": Object {
                  "create": [Function],
                  "duration": Object {
                    "complex": 375,
                    "enteringScreen": 225,
                    "leavingScreen": 195,
                    "short": 250,
                    "shorter": 200,
                    "shortest": 150,
                    "standard": 300,
                  },
                  "easing": Object {
                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                  },
                  "getAutoHeightDuration": [Function],
                },
                "typography": Object {
                  "body1": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                    "lineHeight": "1.46429em",
                  },
                  "body2": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "lineHeight": "1.71429em",
                  },
                  "button": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "textTransform": "uppercase",
                  },
                  "caption": Object {
                    "color": "rgba(0, 0, 0, 0.54)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "lineHeight": "1.375em",
                  },
                  "display1": Object {
                    "color": "rgba(0, 0, 0, 0.54)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                    "lineHeight": "1.20588em",
                  },
                  "display2": Object {
                    "color": "rgba(0, 0, 0, 0.54)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.8125rem",
                    "fontWeight": 400,
                    "lineHeight": "1.13333em",
                    "marginLeft": "-.02em",
                  },
                  "display3": Object {
                    "color": "rgba(0, 0, 0, 0.54)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3.5rem",
                    "fontWeight": 400,
                    "letterSpacing": "-.02em",
                    "lineHeight": "1.30357em",
                    "marginLeft": "-.02em",
                  },
                  "display4": Object {
                    "color": "rgba(0, 0, 0, 0.54)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "7rem",
                    "fontWeight": 300,
                    "letterSpacing": "-.04em",
                    "lineHeight": "1.14286em",
                    "marginLeft": "-.04em",
                  },
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": 14,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "headline": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                    "lineHeight": "1.35417em",
                  },
                  "pxToRem": [Function],
                  "round": [Function],
                  "subheading": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "lineHeight": "1.5em",
                  },
                  "title": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.3125rem",
                    "fontWeight": 500,
                    "lineHeight": "1.16667em",
                  },
                },
                "zIndex": Object {
                  "appBar": 1100,
                  "drawer": 1200,
                  "mobileStepper": 1000,
                  "modal": 1300,
                  "snackbar": 1400,
                  "tooltip": 1500,
                },
              }
            }
          >
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Routes>
                    <RouteTransitions>
                      <RouteWrapper
                        atActive={
                          Object {
                            "opacity": 1,
                          }
                        }
                        atEnter={
                          Object {
                            "opacity": 0,
                          }
                        }
                        atLeave={
                          Object {
                            "opacity": 0,
                          }
                        }
                        className="route-wrapper"
                      >
                        <Route>
                          <AnimatedSwitch
                            atActive={
                              Object {
                                "opacity": 1,
                              }
                            }
                            atEnter={
                              Object {
                                "opacity": 0,
                              }
                            }
                            atLeave={
                              Object {
                                "opacity": 0,
                              }
                            }
                            className="route-wrapper"
                            location={
                              Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              }
                            }
                          >
                            <RouteTransition
                              atActive={
                                Object {
                                  "opacity": 1,
                                }
                              }
                              atEnter={
                                Object {
                                  "opacity": 0,
                                }
                              }
                              atLeave={
                                Object {
                                  "opacity": 0,
                                }
                              }
                              className="route-wrapper"
                              mapStyles={[Function]}
                              runOnMount={false}
                              wrapperComponent="div"
                            >
                              <TransitionMotion
                                defaultStyles={null}
                                didLeave={[Function]}
                                styles={
                                  Array [
                                    Object {
                                      "data": <Switch
                                        location={
                                          Object {
                                            "hash": "",
                                            "pathname": "/",
                                            "search": "",
                                            "state": undefined,
                                          }
                                        }
                                      >
                                        <Route
                                          component={[Function]}
                                          exact={true}
                                          path="/"
                                        />
                                      </Switch>,
                                      "key": "",
                                      "style": Object {
                                        "opacity": Object {
                                          "damping": 26,
                                          "precision": 0.01,
                                          "stiffness": 170,
                                          "val": 1,
                                        },
                                      },
                                    },
                                  ]
                                }
                                willEnter={[Function]}
                                willLeave={[Function]}
                              >
                                <div
                                  className="route-wrapper"
                                >
                                  <div
                                    key=""
                                    style={
                                      Object {
                                        "opacity": 1,
                                      }
                                    }
                                  >
                                    <Switch
                                      key=""
                                      location={
                                        Object {
                                          "hash": "",
                                          "pathname": "/",
                                          "search": "",
                                          "state": undefined,
                                        }
                                      }
                                    >
                                      <Route
                                        component={[Function]}
                                        computedMatch={
                                          Object {
                                            "isExact": true,
                                            "params": Object {},
                                            "path": "/",
                                            "url": "/",
                                          }
                                        }
                                        exact={true}
                                        location={
                                          Object {
                                            "hash": "",
                                            "pathname": "/",
                                            "search": "",
                                            "state": undefined,
                                          }
                                        }
                                        path="/"
                                      >
                                        <Todos
                                          history={
                                            Object {
                                              "action": "POP",
                                              "block": [Function],
                                              "createHref": [Function],
                                              "go": [Function],
                                              "goBack": [Function],
                                              "goForward": [Function],
                                              "length": 1,
                                              "listen": [Function],
                                              "location": Object {
                                                "hash": "",
                                                "pathname": "/",
                                                "search": "",
                                                "state": undefined,
                                              },
                                              "push": [Function],
                                              "replace": [Function],
                                            }
                                          }
                                          location={
                                            Object {
                                              "hash": "",
                                              "pathname": "/",
                                              "search": "",
                                              "state": undefined,
                                            }
                                          }
                                          match={
                                            Object {
                                              "isExact": true,
                                              "params": Object {},
                                              "path": "/",
                                              "url": "/",
                                            }
                                          }
                                        >
                                          <div>
                                            <Connect(TodosCreate)>
                                              <TodosCreate
                                                createAndGetTodos={[Function]}
                                              >
                                                <div>
                                                  <h2>
                                                    Add Todo
                                                  </h2>
                                                  <ReduxForm
                                                    onSubmit={[Function]}
                                                  >
                                                    <Connect(Form(TodosForm))
                                                      destroyOnUnmount={true}
                                                      enableReinitialize={false}
                                                      forceUnregisterOnUnmount={false}
                                                      form="TodoForm"
                                                      getFormState={[Function]}
                                                      keepDirtyOnReinitialize={false}
                                                      onSubmit={[Function]}
                                                      persistentSubmitErrors={false}
                                                      pure={true}
                                                      shouldAsyncValidate={[Function]}
                                                      shouldError={[Function]}
                                                      shouldValidate={[Function]}
                                                      shouldWarn={[Function]}
                                                      touchOnBlur={true}
                                                      touchOnChange={false}
                                                      updateUnregisteredFields={false}
                                                    >
                                                      <Form(TodosForm)
                                                        anyTouched={false}
                                                        array={
                                                          Object {
                                                            "insert": [Function],
                                                            "move": [Function],
                                                            "pop": [Function],
                                                            "push": [Function],
                                                            "remove": [Function],
                                                            "removeAll": [Function],
                                                            "shift": [Function],
                                                            "splice": [Function],
                                                            "swap": [Function],
                                                            "unshift": [Function],
                                                          }
                                                        }
                                                        arrayInsert={[Function]}
                                                        arrayMove={[Function]}
                                                        arrayPop={[Function]}
                                                        arrayPush={[Function]}
                                                        arrayRemove={[Function]}
                                                        arrayRemoveAll={[Function]}
                                                        arrayShift={[Function]}
                                                        arraySplice={[Function]}
                                                        arraySwap={[Function]}
                                                        arrayUnshift={[Function]}
                                                        asyncValidating={false}
                                                        autofill={[Function]}
                                                        blur={[Function]}
                                                        change={[Function]}
                                                        clearAsyncError={[Function]}
                                                        clearFields={[Function]}
                                                        clearSubmit={[Function]}
                                                        clearSubmitErrors={[Function]}
                                                        destroy={[Function]}
                                                        destroyOnUnmount={true}
                                                        dirty={false}
                                                        dispatch={[Function]}
                                                        enableReinitialize={false}
                                                        focus={[Function]}
                                                        forceUnregisterOnUnmount={false}
                                                        form="TodoForm"
                                                        getFormState={[Function]}
                                                        initialize={[Function]}
                                                        initialized={false}
                                                        invalid={false}
                                                        keepDirtyOnReinitialize={false}
                                                        onSubmit={[Function]}
                                                        persistentSubmitErrors={false}
                                                        pristine={true}
                                                        pure={true}
                                                        registerField={[Function]}
                                                        registeredFields={
                                                          Object {
                                                            "title": Object {
                                                              "count": 1,
                                                              "name": "title",
                                                              "type": "Field",
                                                            },
                                                          }
                                                        }
                                                        reset={[Function]}
                                                        resetSection={[Function]}
                                                        setSubmitFailed={[Function]}
                                                        setSubmitSucceeded={[Function]}
                                                        shouldAsyncValidate={[Function]}
                                                        shouldError={[Function]}
                                                        shouldValidate={[Function]}
                                                        shouldWarn={[Function]}
                                                        startAsyncValidation={[Function]}
                                                        startSubmit={[Function]}
                                                        stopAsyncValidation={[Function]}
                                                        stopSubmit={[Function]}
                                                        submit={[Function]}
                                                        submitFailed={false}
                                                        submitSucceeded={false}
                                                        submitting={false}
                                                        syncErrors={Object {}}
                                                        syncWarnings={Object {}}
                                                        touch={[Function]}
                                                        touchOnBlur={true}
                                                        touchOnChange={false}
                                                        unregisterField={[Function]}
                                                        untouch={[Function]}
                                                        updateSyncErrors={[Function]}
                                                        updateSyncWarnings={[Function]}
                                                        updateUnregisteredFields={false}
                                                        valid={true}
                                                        validExceptSubmit={true}
                                                        values={Object {}}
                                                      >
                                                        <TodosForm
                                                          anyTouched={false}
                                                          array={
                                                            Object {
                                                              "insert": [Function],
                                                              "move": [Function],
                                                              "pop": [Function],
                                                              "push": [Function],
                                                              "remove": [Function],
                                                              "removeAll": [Function],
                                                              "shift": [Function],
                                                              "splice": [Function],
                                                              "swap": [Function],
                                                              "unshift": [Function],
                                                            }
                                                          }
                                                          asyncValidate={[Function]}
                                                          asyncValidating={false}
                                                          autofill={[Function]}
                                                          blur={[Function]}
                                                          change={[Function]}
                                                          clearAsyncError={[Function]}
                                                          clearFields={[Function]}
                                                          clearSubmit={[Function]}
                                                          clearSubmitErrors={[Function]}
                                                          destroy={[Function]}
                                                          dirty={false}
                                                          dispatch={[Function]}
                                                          form="TodoForm"
                                                          handleSubmit={[Function]}
                                                          initialize={[Function]}
                                                          initialized={false}
                                                          invalid={false}
                                                          onSubmit={[Function]}
                                                          pristine={true}
                                                          pure={true}
                                                          reset={[Function]}
                                                          resetSection={[Function]}
                                                          submit={[Function]}
                                                          submitFailed={false}
                                                          submitSucceeded={false}
                                                          submitting={false}
                                                          touch={[Function]}
                                                          untouch={[Function]}
                                                          valid={true}
                                                        >
                                                          <form
                                                            className="todosForm"
                                                            onSubmit={[Function]}
                                                          >
                                                            <div>
                                                              <TextFieldRedux
                                                                fullWidth={true}
                                                                label="Title"
                                                                margin="normal"
                                                                name="title"
                                                              >
                                                                <Field
                                                                  component={[Function]}
                                                                  fullWidth={true}
                                                                  label="Title"
                                                                  margin="normal"
                                                                  name="title"
                                                                >
                                                                  <Connect(ConnectedField)
                                                                    _reduxForm={
                                                                      Object {
                                                                        "anyTouched": false,
                                                                        "array": Object {
                                                                          "insert": [Function],
                                                                          "move": [Function],
                                                                          "pop": [Function],
                                                                          "push": [Function],
                                                                          "remove": [Function],
                                                                          "removeAll": [Function],
                                                                          "shift": [Function],
                                                                          "splice": [Function],
                                                                          "swap": [Function],
                                                                          "unshift": [Function],
                                                                        },
                                                                        "arrayInsert": [Function],
                                                                        "arrayMove": [Function],
                                                                        "arrayPop": [Function],
                                                                        "arrayPush": [Function],
                                                                        "arrayRemove": [Function],
                                                                        "arrayRemoveAll": [Function],
                                                                        "arrayShift": [Function],
                                                                        "arraySplice": [Function],
                                                                        "arraySwap": [Function],
                                                                        "arrayUnshift": [Function],
                                                                        "asyncErrors": undefined,
                                                                        "asyncValidate": [Function],
                                                                        "asyncValidating": false,
                                                                        "autofill": [Function],
                                                                        "blur": [Function],
                                                                        "change": [Function],
                                                                        "clearAsyncError": [Function],
                                                                        "clearFields": [Function],
                                                                        "clearSubmit": [Function],
                                                                        "clearSubmitErrors": [Function],
                                                                        "destroy": [Function],
                                                                        "destroyOnUnmount": true,
                                                                        "dirty": false,
                                                                        "dispatch": [Function],
                                                                        "enableReinitialize": false,
                                                                        "error": undefined,
                                                                        "focus": [Function],
                                                                        "forceUnregisterOnUnmount": false,
                                                                        "form": "TodoForm",
                                                                        "getFormState": [Function],
                                                                        "getValues": [Function],
                                                                        "initialValues": undefined,
                                                                        "initialize": [Function],
                                                                        "initialized": false,
                                                                        "invalid": false,
                                                                        "keepDirtyOnReinitialize": false,
                                                                        "onSubmit": [Function],
                                                                        "persistentSubmitErrors": false,
                                                                        "pristine": true,
                                                                        "pure": true,
                                                                        "register": [Function],
                                                                        "registerField": [Function],
                                                                        "registerInnerOnSubmit": [Function],
                                                                        "registeredFields": undefined,
                                                                        "reset": [Function],
                                                                        "resetSection": [Function],
                                                                        "sectionPrefix": undefined,
                                                                        "setSubmitFailed": [Function],
                                                                        "setSubmitSucceeded": [Function],
                                                                        "shouldAsyncValidate": [Function],
                                                                        "shouldError": [Function],
                                                                        "shouldValidate": [Function],
                                                                        "shouldWarn": [Function],
                                                                        "startAsyncValidation": [Function],
                                                                        "startSubmit": [Function],
                                                                        "stopAsyncValidation": [Function],
                                                                        "stopSubmit": [Function],
                                                                        "submit": [Function],
                                                                        "submitFailed": false,
                                                                        "submitSucceeded": false,
                                                                        "submitting": false,
                                                                        "syncErrors": Object {},
                                                                        "syncWarnings": Object {},
                                                                        "touch": [Function],
                                                                        "touchOnBlur": true,
                                                                        "touchOnChange": false,
                                                                        "triggerSubmit": undefined,
                                                                        "unregister": [Function],
                                                                        "unregisterField": [Function],
                                                                        "untouch": [Function],
                                                                        "updateSyncErrors": [Function],
                                                                        "updateSyncWarnings": [Function],
                                                                        "updateUnregisteredFields": false,
                                                                        "valid": true,
                                                                        "validExceptSubmit": true,
                                                                        "values": Object {},
                                                                        "warning": undefined,
                                                                      }
                                                                    }
                                                                    component={[Function]}
                                                                    fullWidth={true}
                                                                    label="Title"
                                                                    margin="normal"
                                                                    name="title"
                                                                    normalize={[Function]}
                                                                  >
                                                                    <ConnectedField
                                                                      _reduxForm={
                                                                        Object {
                                                                          "anyTouched": false,
                                                                          "array": Object {
                                                                            "insert": [Function],
                                                                            "move": [Function],
                                                                            "pop": [Function],
                                                                            "push": [Function],
                                                                            "remove": [Function],
                                                                            "removeAll": [Function],
                                                                            "shift": [Function],
                                                                            "splice": [Function],
                                                                            "swap": [Function],
                                                                            "unshift": [Function],
                                                                          },
                                                                          "arrayInsert": [Function],
                                                                          "arrayMove": [Function],
                                                                          "arrayPop": [Function],
                                                                          "arrayPush": [Function],
                                                                          "arrayRemove": [Function],
                                                                          "arrayRemoveAll": [Function],
                                                                          "arrayShift": [Function],
                                                                          "arraySplice": [Function],
                                                                          "arraySwap": [Function],
                                                                          "arrayUnshift": [Function],
                                                                          "asyncErrors": undefined,
                                                                          "asyncValidate": [Function],
                                                                          "asyncValidating": false,
                                                                          "autofill": [Function],
                                                                          "blur": [Function],
                                                                          "change": [Function],
                                                                          "clearAsyncError": [Function],
                                                                          "clearFields": [Function],
                                                                          "clearSubmit": [Function],
                                                                          "clearSubmitErrors": [Function],
                                                                          "destroy": [Function],
                                                                          "destroyOnUnmount": true,
                                                                          "dirty": false,
                                                                          "dispatch": [Function],
                                                                          "enableReinitialize": false,
                                                                          "error": undefined,
                                                                          "focus": [Function],
                                                                          "forceUnregisterOnUnmount": false,
                                                                          "form": "TodoForm",
                                                                          "getFormState": [Function],
                                                                          "getValues": [Function],
                                                                          "initialValues": undefined,
                                                                          "initialize": [Function],
                                                                          "initialized": false,
                                                                          "invalid": false,
                                                                          "keepDirtyOnReinitialize": false,
                                                                          "onSubmit": [Function],
                                                                          "persistentSubmitErrors": false,
                                                                          "pristine": true,
                                                                          "pure": true,
                                                                          "register": [Function],
                                                                          "registerField": [Function],
                                                                          "registerInnerOnSubmit": [Function],
                                                                          "registeredFields": undefined,
                                                                          "reset": [Function],
                                                                          "resetSection": [Function],
                                                                          "sectionPrefix": undefined,
                                                                          "setSubmitFailed": [Function],
                                                                          "setSubmitSucceeded": [Function],
                                                                          "shouldAsyncValidate": [Function],
                                                                          "shouldError": [Function],
                                                                          "shouldValidate": [Function],
                                                                          "shouldWarn": [Function],
                                                                          "startAsyncValidation": [Function],
                                                                          "startSubmit": [Function],
                                                                          "stopAsyncValidation": [Function],
                                                                          "stopSubmit": [Function],
                                                                          "submit": [Function],
                                                                          "submitFailed": false,
                                                                          "submitSucceeded": false,
                                                                          "submitting": false,
                                                                          "syncErrors": Object {},
                                                                          "syncWarnings": Object {},
                                                                          "touch": [Function],
                                                                          "touchOnBlur": true,
                                                                          "touchOnChange": false,
                                                                          "triggerSubmit": undefined,
                                                                          "unregister": [Function],
                                                                          "unregisterField": [Function],
                                                                          "untouch": [Function],
                                                                          "updateSyncErrors": [Function],
                                                                          "updateSyncWarnings": [Function],
                                                                          "updateUnregisteredFields": false,
                                                                          "valid": true,
                                                                          "validExceptSubmit": true,
                                                                          "values": Object {},
                                                                          "warning": undefined,
                                                                        }
                                                                      }
                                                                      asyncValidating={false}
                                                                      component={[Function]}
                                                                      dirty={false}
                                                                      dispatch={[Function]}
                                                                      fullWidth={true}
                                                                      label="Title"
                                                                      margin="normal"
                                                                      name="title"
                                                                      normalize={[Function]}
                                                                      pristine={true}
                                                                    >
                                                                      <ReduxFormMaterialUITextField
                                                                        fullWidth={true}
                                                                        input={
                                                                          Object {
                                                                            "name": "title",
                                                                            "onBlur": [Function],
                                                                            "onChange": [Function],
                                                                            "onDragStart": [Function],
                                                                            "onDrop": [Function],
                                                                            "onFocus": [Function],
                                                                            "value": "",
                                                                          }
                                                                        }
                                                                        label="Title"
                                                                        margin="normal"
                                                                        meta={
                                                                          Object {
                                                                            "active": false,
                                                                            "asyncValidating": false,
                                                                            "autofilled": false,
                                                                            "dirty": false,
                                                                            "dispatch": [Function],
                                                                            "error": undefined,
                                                                            "form": "TodoForm",
                                                                            "initial": undefined,
                                                                            "invalid": false,
                                                                            "pristine": true,
                                                                            "submitFailed": false,
                                                                            "submitting": false,
                                                                            "touched": false,
                                                                            "valid": true,
                                                                            "visited": false,
                                                                            "warning": undefined,
                                                                          }
                                                                        }
                                                                      >
                                                                        <TextField
                                                                          fullWidth={true}
                                                                          label="Title"
                                                                          margin="normal"
                                                                          name="title"
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onDragStart={[Function]}
                                                                          onDrop={[Function]}
                                                                          onFocus={[Function]}
                                                                          required={false}
                                                                          select={false}
                                                                          value=""
                                                                        >
                                                                          <WithStyles(FormControl)
                                                                            fullWidth={true}
                                                                            margin="normal"
                                                                            onDragStart={[Function]}
                                                                            onDrop={[Function]}
                                                                            required={false}
                                                                          >
                                                                            <FormControl
                                                                              classes={
                                                                                Object {
                                                                                  "fullWidth": "MuiFormControl-fullWidth-4",
                                                                                  "marginDense": "MuiFormControl-marginDense-3",
                                                                                  "marginNormal": "MuiFormControl-marginNormal-2",
                                                                                  "root": "MuiFormControl-root-1",
                                                                                }
                                                                              }
                                                                              component="div"
                                                                              disabled={false}
                                                                              error={false}
                                                                              fullWidth={true}
                                                                              margin="normal"
                                                                              onDragStart={[Function]}
                                                                              onDrop={[Function]}
                                                                              required={false}
                                                                            >
                                                                              <div
                                                                                className="MuiFormControl-root-1 MuiFormControl-marginNormal-2 MuiFormControl-fullWidth-4"
                                                                                onDragStart={[Function]}
                                                                                onDrop={[Function]}
                                                                              >
                                                                                <WithStyles(InputLabel)>
                                                                                  <InputLabel
                                                                                    classes={
                                                                                      Object {
                                                                                        "animated": "MuiInputLabel-animated-9",
                                                                                        "formControl": "MuiInputLabel-formControl-6",
                                                                                        "marginDense": "MuiInputLabel-marginDense-7",
                                                                                        "root": "MuiInputLabel-root-5",
                                                                                        "shrink": "MuiInputLabel-shrink-8",
                                                                                      }
                                                                                    }
                                                                                    disableAnimation={false}
                                                                                  >
                                                                                    <WithStyles(FormLabel)
                                                                                      className="MuiInputLabel-root-5 MuiInputLabel-formControl-6 MuiInputLabel-animated-9"
                                                                                      data-shrink={false}
                                                                                    >
                                                                                      <FormLabel
                                                                                        className="MuiInputLabel-root-5 MuiInputLabel-formControl-6 MuiInputLabel-animated-9"
                                                                                        classes={
                                                                                          Object {
                                                                                            "asterisk": "MuiFormLabel-asterisk-16",
                                                                                            "disabled": "MuiFormLabel-disabled-12",
                                                                                            "error": "MuiFormLabel-error-13",
                                                                                            "filled": "MuiFormLabel-filled-14",
                                                                                            "focused": "MuiFormLabel-focused-11",
                                                                                            "required": "MuiFormLabel-required-15",
                                                                                            "root": "MuiFormLabel-root-10",
                                                                                          }
                                                                                        }
                                                                                        component="label"
                                                                                        data-shrink={false}
                                                                                      >
                                                                                        <label
                                                                                          className="MuiFormLabel-root-10 MuiInputLabel-root-5 MuiInputLabel-formControl-6 MuiInputLabel-animated-9"
                                                                                          data-shrink={false}
                                                                                        >
                                                                                          Title
                                                                                        </label>
                                                                                      </FormLabel>
                                                                                    </WithStyles(FormLabel)>
                                                                                  </InputLabel>
                                                                                </WithStyles(InputLabel)>
                                                                                <WithStyles(Input)
                                                                                  fullWidth={true}
                                                                                  name="title"
                                                                                  onBlur={[Function]}
                                                                                  onChange={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  value=""
                                                                                >
                                                                                  <Input
                                                                                    classes={
                                                                                      Object {
                                                                                        "disabled": "MuiInput-disabled-20",
                                                                                        "error": "MuiInput-error-22",
                                                                                        "focused": "MuiInput-focused-19",
                                                                                        "formControl": "MuiInput-formControl-18",
                                                                                        "fullWidth": "MuiInput-fullWidth-24",
                                                                                        "input": "MuiInput-input-25",
                                                                                        "inputMarginDense": "MuiInput-inputMarginDense-26",
                                                                                        "inputMultiline": "MuiInput-inputMultiline-27",
                                                                                        "inputType": "MuiInput-inputType-28",
                                                                                        "inputTypeSearch": "MuiInput-inputTypeSearch-29",
                                                                                        "multiline": "MuiInput-multiline-23",
                                                                                        "root": "MuiInput-root-17",
                                                                                        "underline": "MuiInput-underline-21",
                                                                                      }
                                                                                    }
                                                                                    disableUnderline={false}
                                                                                    fullWidth={true}
                                                                                    multiline={false}
                                                                                    name="title"
                                                                                    onBlur={[Function]}
                                                                                    onChange={[Function]}
                                                                                    onFocus={[Function]}
                                                                                    type="text"
                                                                                    value=""
                                                                                  >
                                                                                    <div
                                                                                      className="MuiInput-root-17 MuiInput-fullWidth-24 MuiInput-formControl-18 MuiInput-underline-21"
                                                                                    >
                                                                                      <input
                                                                                        aria-invalid={false}
                                                                                        className="MuiInput-input-25"
                                                                                        disabled={false}
                                                                                        name="title"
                                                                                        onBlur={[Function]}
                                                                                        onChange={[Function]}
                                                                                        onFocus={[Function]}
                                                                                        required={false}
                                                                                        type="text"
                                                                                        value=""
                                                                                      />
                                                                                    </div>
                                                                                  </Input>
                                                                                </WithStyles(Input)>
                                                                              </div>
                                                                            </FormControl>
                                                                          </WithStyles(FormControl)>
                                                                        </TextField>
                                                                      </ReduxFormMaterialUITextField>
                                                                    </ConnectedField>
                                                                  </Connect(ConnectedField)>
                                                                </Field>
                                                              </TextFieldRedux>
                                                            </div>
                                                            <div>
                                                              <WithStyles(Button)
                                                                color="primary"
                                                                fullWidth={true}
                                                                type="submit"
                                                                variant="contained"
                                                              >
                                                                <Button
                                                                  classes={
                                                                    Object {
                                                                      "colorInherit": "MuiButton-colorInherit-51",
                                                                      "contained": "MuiButton-contained-41",
                                                                      "containedPrimary": "MuiButton-containedPrimary-42",
                                                                      "containedSecondary": "MuiButton-containedSecondary-43",
                                                                      "disabled": "MuiButton-disabled-50",
                                                                      "extendedFab": "MuiButton-extendedFab-48",
                                                                      "fab": "MuiButton-fab-47",
                                                                      "flat": "MuiButton-flat-35",
                                                                      "flatPrimary": "MuiButton-flatPrimary-36",
                                                                      "flatSecondary": "MuiButton-flatSecondary-37",
                                                                      "focusVisible": "MuiButton-focusVisible-49",
                                                                      "fullWidth": "MuiButton-fullWidth-55",
                                                                      "label": "MuiButton-label-31",
                                                                      "mini": "MuiButton-mini-52",
                                                                      "outlined": "MuiButton-outlined-38",
                                                                      "outlinedPrimary": "MuiButton-outlinedPrimary-39",
                                                                      "outlinedSecondary": "MuiButton-outlinedSecondary-40",
                                                                      "raised": "MuiButton-raised-44",
                                                                      "raisedPrimary": "MuiButton-raisedPrimary-45",
                                                                      "raisedSecondary": "MuiButton-raisedSecondary-46",
                                                                      "root": "MuiButton-root-30",
                                                                      "sizeLarge": "MuiButton-sizeLarge-54",
                                                                      "sizeSmall": "MuiButton-sizeSmall-53",
                                                                      "text": "MuiButton-text-32",
                                                                      "textPrimary": "MuiButton-textPrimary-33",
                                                                      "textSecondary": "MuiButton-textSecondary-34",
                                                                    }
                                                                  }
                                                                  color="primary"
                                                                  component="button"
                                                                  disableFocusRipple={false}
                                                                  disabled={false}
                                                                  fullWidth={true}
                                                                  mini={false}
                                                                  size="medium"
                                                                  type="submit"
                                                                  variant="contained"
                                                                >
                                                                  <WithStyles(ButtonBase)
                                                                    className="MuiButton-root-30 MuiButton-contained-41 MuiButton-containedPrimary-42 MuiButton-raised-44 MuiButton-raisedPrimary-45 MuiButton-fullWidth-55"
                                                                    component="button"
                                                                    disabled={false}
                                                                    focusRipple={true}
                                                                    focusVisibleClassName="MuiButton-focusVisible-49"
                                                                    type="submit"
                                                                  >
                                                                    <ButtonBase
                                                                      centerRipple={false}
                                                                      className="MuiButton-root-30 MuiButton-contained-41 MuiButton-containedPrimary-42 MuiButton-raised-44 MuiButton-raisedPrimary-45 MuiButton-fullWidth-55"
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "MuiButtonBase-disabled-57",
                                                                          "focusVisible": "MuiButtonBase-focusVisible-58",
                                                                          "root": "MuiButtonBase-root-56",
                                                                        }
                                                                      }
                                                                      component="button"
                                                                      disableRipple={false}
                                                                      disableTouchRipple={false}
                                                                      disabled={false}
                                                                      focusRipple={true}
                                                                      focusVisibleClassName="MuiButton-focusVisible-49"
                                                                      tabIndex="0"
                                                                      type="submit"
                                                                    >
                                                                      <button
                                                                        className="MuiButtonBase-root-56 MuiButton-root-30 MuiButton-contained-41 MuiButton-containedPrimary-42 MuiButton-raised-44 MuiButton-raisedPrimary-45 MuiButton-fullWidth-55"
                                                                        disabled={false}
                                                                        onBlur={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onKeyUp={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                        onTouchMove={[Function]}
                                                                        onTouchStart={[Function]}
                                                                        tabIndex="0"
                                                                        type="submit"
                                                                      >
                                                                        <span
                                                                          className="MuiButton-label-31"
                                                                        >
                                                                          Add
                                                                        </span>
                                                                        <WithStyles(TouchRipple)
                                                                          center={false}
                                                                          innerRef={[Function]}
                                                                        >
                                                                          <TouchRipple
                                                                            center={false}
                                                                            classes={
                                                                              Object {
                                                                                "child": "MuiTouchRipple-child-63",
                                                                                "childLeaving": "MuiTouchRipple-childLeaving-64",
                                                                                "childPulsate": "MuiTouchRipple-childPulsate-65",
                                                                                "ripple": "MuiTouchRipple-ripple-60",
                                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate-62",
                                                                                "rippleVisible": "MuiTouchRipple-rippleVisible-61",
                                                                                "root": "MuiTouchRipple-root-59",
                                                                              }
                                                                            }
                                                                          >
                                                                            <TransitionGroup
                                                                              childFactory={[Function]}
                                                                              className="MuiTouchRipple-root-59"
                                                                              component="span"
                                                                              enter={true}
                                                                              exit={true}
                                                                            >
                                                                              <span
                                                                                className="MuiTouchRipple-root-59"
                                                                              />
                                                                            </TransitionGroup>
                                                                          </TouchRipple>
                                                                        </WithStyles(TouchRipple)>
                                                                      </button>
                                                                    </ButtonBase>
                                                                  </WithStyles(ButtonBase)>
                                                                </Button>
                                                              </WithStyles(Button)>
                                                            </div>
                                                          </form>
                                                        </TodosForm>
                                                      </Form(TodosForm)>
                                                    </Connect(Form(TodosForm))>
                                                  </ReduxForm>
                                                </div>
                                              </TodosCreate>
                                            </Connect(TodosCreate)>
                                            <Connect(TodosList)>
                                              <TodosList
                                                getTodos={[Function]}
                                                received={true}
                                                todos={
                                                  Array [
                                                    Object {
                                                      "id": 0,
                                                      "title": "Corporate Identity Assistant",
                                                    },
                                                    Object {
                                                      "id": 1,
                                                      "title": "Human Integration Coordinator",
                                                    },
                                                    Object {
                                                      "id": 2,
                                                      "title": "Central Data Technician",
                                                    },
                                                    Object {
                                                      "id": 3,
                                                      "title": "National Branding Administrator",
                                                    },
                                                    Object {
                                                      "id": 4,
                                                      "title": "Senior Integration Supervisor",
                                                    },
                                                    Object {
                                                      "id": 5,
                                                      "title": "Investor Security Engineer",
                                                    },
                                                  ]
                                                }
                                              >
                                                <div>
                                                  <h2>
                                                    Todo list
                                                  </h2>
                                                  <WithStyles(Table)>
                                                    <Table
                                                      classes={
                                                        Object {
                                                          "root": "MuiTable-root-66",
                                                        }
                                                      }
                                                      component="table"
                                                      padding="default"
                                                    >
                                                      <table
                                                        className="MuiTable-root-66"
                                                      >
                                                        <WithStyles(TableHead)>
                                                          <TableHead
                                                            classes={
                                                              Object {
                                                                "root": "MuiTableHead-root-67",
                                                              }
                                                            }
                                                            component="thead"
                                                          >
                                                            <thead
                                                              className="MuiTableHead-root-67"
                                                            >
                                                              <WithStyles(TableRow)>
                                                                <TableRow
                                                                  classes={
                                                                    Object {
                                                                      "footer": "MuiTableRow-footer-72",
                                                                      "head": "MuiTableRow-head-71",
                                                                      "hover": "MuiTableRow-hover-70",
                                                                      "root": "MuiTableRow-root-68",
                                                                      "selected": "MuiTableRow-selected-69",
                                                                    }
                                                                  }
                                                                  component="tr"
                                                                  hover={false}
                                                                  selected={false}
                                                                >
                                                                  <tr
                                                                    className="MuiTableRow-root-68 MuiTableRow-head-71"
                                                                  >
                                                                    <WithStyles(TableCell)>
                                                                      <TableCell
                                                                        classes={
                                                                          Object {
                                                                            "body": "MuiTableCell-body-75",
                                                                            "footer": "MuiTableCell-footer-76",
                                                                            "head": "MuiTableCell-head-74",
                                                                            "numeric": "MuiTableCell-numeric-77",
                                                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox-79",
                                                                            "paddingDense": "MuiTableCell-paddingDense-78",
                                                                            "paddingNone": "MuiTableCell-paddingNone-80",
                                                                            "root": "MuiTableCell-root-73",
                                                                          }
                                                                        }
                                                                        numeric={false}
                                                                      >
                                                                        <th
                                                                          aria-sort={null}
                                                                          className="MuiTableCell-root-73 MuiTableCell-head-74"
                                                                          scope="col"
                                                                        >
                                                                          ID
                                                                        </th>
                                                                      </TableCell>
                                                                    </WithStyles(TableCell)>
                                                                    <WithStyles(TableCell)>
                                                                      <TableCell
                                                                        classes={
                                                                          Object {
                                                                            "body": "MuiTableCell-body-75",
                                                                            "footer": "MuiTableCell-footer-76",
                                                                            "head": "MuiTableCell-head-74",
                                                                            "numeric": "MuiTableCell-numeric-77",
                                                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox-79",
                                                                            "paddingDense": "MuiTableCell-paddingDense-78",
                                                                            "paddingNone": "MuiTableCell-paddingNone-80",
                                                                            "root": "MuiTableCell-root-73",
                                                                          }
                                                                        }
                                                                        numeric={false}
                                                                      >
                                                                        <th
                                                                          aria-sort={null}
                                                                          className="MuiTableCell-root-73 MuiTableCell-head-74"
                                                                          scope="col"
                                                                        >
                                                                          Title
                                                                        </th>
                                                                      </TableCell>
                                                                    </WithStyles(TableCell)>
                                                                  </tr>
                                                                </TableRow>
                                                              </WithStyles(TableRow)>
                                                            </thead>
                                                          </TableHead>
                                                        </WithStyles(TableHead)>
                                                        <WithStyles(TableBody)>
                                                          <TableBody
                                                            classes={
                                                              Object {
                                                                "root": "MuiTableBody-root-81",
                                                              }
                                                            }
                                                            component="tbody"
                                                          >
                                                            <tbody
                                                              className="MuiTableBody-root-81"
                                                            >
                                                              <WithStyles(TableRow)
                                                                key="0"
                                                              >
                                                                <TableRow
                                                                  classes={
                                                                    Object {
                                                                      "footer": "MuiTableRow-footer-72",
                                                                      "head": "MuiTableRow-head-71",
                                                                      "hover": "MuiTableRow-hover-70",
                                                                      "root": "MuiTableRow-root-68",
                                                                      "selected": "MuiTableRow-selected-69",
                                                                    }
                                                                  }
                                                                  component="tr"
                                                                  hover={false}
                                                                  selected={false}
                                                                >
                                                                  <tr
                                                                    className="MuiTableRow-root-68"
                                                                  >
                                                                    <WithStyles(TableCell)>
                                                                      <TableCell
                                                                        classes={
                                                                          Object {
                                                                            "body": "MuiTableCell-body-75",
                                                                            "footer": "MuiTableCell-footer-76",
                                                                            "head": "MuiTableCell-head-74",
                                                                            "numeric": "MuiTableCell-numeric-77",
                                                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox-79",
                                                                            "paddingDense": "MuiTableCell-paddingDense-78",
                                                                            "paddingNone": "MuiTableCell-paddingNone-80",
                                                                            "root": "MuiTableCell-root-73",
                                                                          }
                                                                        }
                                                                        numeric={false}
                                                                      >
                                                                        <td
                                                                          aria-sort={null}
                                                                          className="MuiTableCell-root-73 MuiTableCell-body-75"
                                                                        >
                                                                          0
                                                                        </td>
                                                                      </TableCell>
                                                                    </WithStyles(TableCell)>
                                                                    <WithStyles(TableCell)>
                                                                      <TableCell
                                                                        classes={
                                                                          Object {
                                                                            "body": "MuiTableCell-body-75",
                                                                            "footer": "MuiTableCell-footer-76",
                                                                            "head": "MuiTableCell-head-74",
                                                                            "numeric": "MuiTableCell-numeric-77",
                                                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox-79",
                                                                            "paddingDense": "MuiTableCell-paddingDense-78",
                                                                            "paddingNone": "MuiTableCell-paddingNone-80",
                                                                            "root": "MuiTableCell-root-73",
                                                                          }
                                                                        }
                                                                        numeric={false}
                                                                      >
                                                                        <td
                                                                          aria-sort={null}
                                                                          className="MuiTableCell-root-73 MuiTableCell-body-75"
                                                                        >
                                                                          Corporate Identity Assistant
                                                                        </td>
                                                                      </TableCell>
                                                                    </WithStyles(TableCell)>
                                                                  </tr>
                                                                </TableRow>
                                                              </WithStyles(TableRow)>
                                                              <WithStyles(TableRow)
                                                                key="1"
                                                              >
                                                                <TableRow
                                                                  classes={
                                                                    Object {
                                                                      "footer": "MuiTableRow-footer-72",
                                                                      "head": "MuiTableRow-head-71",
                                                                      "hover": "MuiTableRow-hover-70",
                                                                      "root": "MuiTableRow-root-68",
                                                                      "selected": "MuiTableRow-selected-69",
                                                                    }
                                                                  }
                                                                  component="tr"
                                                                  hover={false}
                                                                  selected={false}
                                                                >
                                                                  <tr
                                                                    className="MuiTableRow-root-68"
                                                                  >
                                                                    <WithStyles(TableCell)>
                                                                      <TableCell
                                                                        classes={
                                                                          Object {
                                                                            "body": "MuiTableCell-body-75",
                                                                            "footer": "MuiTableCell-footer-76",
                                                                            "head": "MuiTableCell-head-74",
                                                                            "numeric": "MuiTableCell-numeric-77",
                                                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox-79",
                                                                            "paddingDense": "MuiTableCell-paddingDense-78",
                                                                            "paddingNone": "MuiTableCell-paddingNone-80",
                                                                            "root": "MuiTableCell-root-73",
                                                                          }
                                                                        }
                                                                        numeric={false}
                                                                      >
                                                                        <td
                                                                          aria-sort={null}
                                                                          className="MuiTableCell-root-73 MuiTableCell-body-75"
                                                                        >
                                                                          1
                                                                        </td>
                                                                      </TableCell>
                                                                    </WithStyles(TableCell)>
                                                                    <WithStyles(TableCell)>
                                                                      <TableCell
                                                                        classes={
                                                                          Object {
                                                                            "body": "MuiTableCell-body-75",
                                                                            "footer": "MuiTableCell-footer-76",
                                                                            "head": "MuiTableCell-head-74",
                                                                            "numeric": "MuiTableCell-numeric-77",
                                                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox-79",
                                                                            "paddingDense": "MuiTableCell-paddingDense-78",
                                                                            "paddingNone": "MuiTableCell-paddingNone-80",
                                                                            "root": "MuiTableCell-root-73",
                                                                          }
                                                                        }
                                                                        numeric={false}
                                                                      >
                                                                        <td
                                                                          aria-sort={null}
                                                                          className="MuiTableCell-root-73 MuiTableCell-body-75"
                                                                        >
                                                                          Human Integration Coordinator
                                                                        </td>
                                                                      </TableCell>
                                                                    </WithStyles(TableCell)>
                                                                  </tr>
                                                                </TableRow>
                                                              </WithStyles(TableRow)>
                                                              <WithStyles(TableRow)
                                                                key="2"
                                                              >
                                                                <TableRow
                                                                  classes={
                                                                    Object {
                                                                      "footer": "MuiTableRow-footer-72",
                                                                      "head": "MuiTableRow-head-71",
                                                                      "hover": "MuiTableRow-hover-70",
                                                                      "root": "MuiTableRow-root-68",
                                                                      "selected": "MuiTableRow-selected-69",
                                                                    }
                                                                  }
                                                                  component="tr"
                                                                  hover={false}
                                                                  selected={false}
                                                                >
                                                                  <tr
                                                                    className="MuiTableRow-root-68"
                                                                  >
                                                                    <WithStyles(TableCell)>
                                                                      <TableCell
                                                                        classes={
                                                                          Object {
                                                                            "body": "MuiTableCell-body-75",
                                                                            "footer": "MuiTableCell-footer-76",
                                                                            "head": "MuiTableCell-head-74",
                                                                            "numeric": "MuiTableCell-numeric-77",
                                                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox-79",
                                                                            "paddingDense": "MuiTableCell-paddingDense-78",
                                                                            "paddingNone": "MuiTableCell-paddingNone-80",
                                                                            "root": "MuiTableCell-root-73",
                                                                          }
                                                                        }
                                                                        numeric={false}
                                                                      >
                                                                        <td
                                                                          aria-sort={null}
                                                                          className="MuiTableCell-root-73 MuiTableCell-body-75"
                                                                        >
                                                                          2
                                                                        </td>
                                                                      </TableCell>
                                                                    </WithStyles(TableCell)>
                                                                    <WithStyles(TableCell)>
                                                                      <TableCell
                                                                        classes={
                                                                          Object {
                                                                            "body": "MuiTableCell-body-75",
                                                                            "footer": "MuiTableCell-footer-76",
                                                                            "head": "MuiTableCell-head-74",
                                                                            "numeric": "MuiTableCell-numeric-77",
                                                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox-79",
                                                                            "paddingDense": "MuiTableCell-paddingDense-78",
                                                                            "paddingNone": "MuiTableCell-paddingNone-80",
                                                                            "root": "MuiTableCell-root-73",
                                                                          }
                                                                        }
                                                                        numeric={false}
                                                                      >
                                                                        <td
                                                                          aria-sort={null}
                                                                          className="MuiTableCell-root-73 MuiTableCell-body-75"
                                                                        >
                                                                          Central Data Technician
                                                                        </td>
                                                                      </TableCell>
                                                                    </WithStyles(TableCell)>
                                                                  </tr>
                                                                </TableRow>
                                                              </WithStyles(TableRow)>
                                                              <WithStyles(TableRow)
                                                                key="3"
                                                              >
                                                                <TableRow
                                                                  classes={
                                                                    Object {
                                                                      "footer": "MuiTableRow-footer-72",
                                                                      "head": "MuiTableRow-head-71",
                                                                      "hover": "MuiTableRow-hover-70",
                                                                      "root": "MuiTableRow-root-68",
                                                                      "selected": "MuiTableRow-selected-69",
                                                                    }
                                                                  }
                                                                  component="tr"
                                                                  hover={false}
                                                                  selected={false}
                                                                >
                                                                  <tr
                                                                    className="MuiTableRow-root-68"
                                                                  >
                                                                    <WithStyles(TableCell)>
                                                                      <TableCell
                                                                        classes={
                                                                          Object {
                                                                            "body": "MuiTableCell-body-75",
                                                                            "footer": "MuiTableCell-footer-76",
                                                                            "head": "MuiTableCell-head-74",
                                                                            "numeric": "MuiTableCell-numeric-77",
                                                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox-79",
                                                                            "paddingDense": "MuiTableCell-paddingDense-78",
                                                                            "paddingNone": "MuiTableCell-paddingNone-80",
                                                                            "root": "MuiTableCell-root-73",
                                                                          }
                                                                        }
                                                                        numeric={false}
                                                                      >
                                                                        <td
                                                                          aria-sort={null}
                                                                          className="MuiTableCell-root-73 MuiTableCell-body-75"
                                                                        >
                                                                          3
                                                                        </td>
                                                                      </TableCell>
                                                                    </WithStyles(TableCell)>
                                                                    <WithStyles(TableCell)>
                                                                      <TableCell
                                                                        classes={
                                                                          Object {
                                                                            "body": "MuiTableCell-body-75",
                                                                            "footer": "MuiTableCell-footer-76",
                                                                            "head": "MuiTableCell-head-74",
                                                                            "numeric": "MuiTableCell-numeric-77",
                                                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox-79",
                                                                            "paddingDense": "MuiTableCell-paddingDense-78",
                                                                            "paddingNone": "MuiTableCell-paddingNone-80",
                                                                            "root": "MuiTableCell-root-73",
                                                                          }
                                                                        }
                                                                        numeric={false}
                                                                      >
                                                                        <td
                                                                          aria-sort={null}
                                                                          className="MuiTableCell-root-73 MuiTableCell-body-75"
                                                                        >
                                                                          National Branding Administrator
                                                                        </td>
                                                                      </TableCell>
                                                                    </WithStyles(TableCell)>
                                                                  </tr>
                                                                </TableRow>
                                                              </WithStyles(TableRow)>
                                                              <WithStyles(TableRow)
                                                                key="4"
                                                              >
                                                                <TableRow
                                                                  classes={
                                                                    Object {
                                                                      "footer": "MuiTableRow-footer-72",
                                                                      "head": "MuiTableRow-head-71",
                                                                      "hover": "MuiTableRow-hover-70",
                                                                      "root": "MuiTableRow-root-68",
                                                                      "selected": "MuiTableRow-selected-69",
                                                                    }
                                                                  }
                                                                  component="tr"
                                                                  hover={false}
                                                                  selected={false}
                                                                >
                                                                  <tr
                                                                    className="MuiTableRow-root-68"
                                                                  >
                                                                    <WithStyles(TableCell)>
                                                                      <TableCell
                                                                        classes={
                                                                          Object {
                                                                            "body": "MuiTableCell-body-75",
                                                                            "footer": "MuiTableCell-footer-76",
                                                                            "head": "MuiTableCell-head-74",
                                                                            "numeric": "MuiTableCell-numeric-77",
                                                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox-79",
                                                                            "paddingDense": "MuiTableCell-paddingDense-78",
                                                                            "paddingNone": "MuiTableCell-paddingNone-80",
                                                                            "root": "MuiTableCell-root-73",
                                                                          }
                                                                        }
                                                                        numeric={false}
                                                                      >
                                                                        <td
                                                                          aria-sort={null}
                                                                          className="MuiTableCell-root-73 MuiTableCell-body-75"
                                                                        >
                                                                          4
                                                                        </td>
                                                                      </TableCell>
                                                                    </WithStyles(TableCell)>
                                                                    <WithStyles(TableCell)>
                                                                      <TableCell
                                                                        classes={
                                                                          Object {
                                                                            "body": "MuiTableCell-body-75",
                                                                            "footer": "MuiTableCell-footer-76",
                                                                            "head": "MuiTableCell-head-74",
                                                                            "numeric": "MuiTableCell-numeric-77",
                                                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox-79",
                                                                            "paddingDense": "MuiTableCell-paddingDense-78",
                                                                            "paddingNone": "MuiTableCell-paddingNone-80",
                                                                            "root": "MuiTableCell-root-73",
                                                                          }
                                                                        }
                                                                        numeric={false}
                                                                      >
                                                                        <td
                                                                          aria-sort={null}
                                                                          className="MuiTableCell-root-73 MuiTableCell-body-75"
                                                                        >
                                                                          Senior Integration Supervisor
                                                                        </td>
                                                                      </TableCell>
                                                                    </WithStyles(TableCell)>
                                                                  </tr>
                                                                </TableRow>
                                                              </WithStyles(TableRow)>
                                                              <WithStyles(TableRow)
                                                                key="5"
                                                              >
                                                                <TableRow
                                                                  classes={
                                                                    Object {
                                                                      "footer": "MuiTableRow-footer-72",
                                                                      "head": "MuiTableRow-head-71",
                                                                      "hover": "MuiTableRow-hover-70",
                                                                      "root": "MuiTableRow-root-68",
                                                                      "selected": "MuiTableRow-selected-69",
                                                                    }
                                                                  }
                                                                  component="tr"
                                                                  hover={false}
                                                                  selected={false}
                                                                >
                                                                  <tr
                                                                    className="MuiTableRow-root-68"
                                                                  >
                                                                    <WithStyles(TableCell)>
                                                                      <TableCell
                                                                        classes={
                                                                          Object {
                                                                            "body": "MuiTableCell-body-75",
                                                                            "footer": "MuiTableCell-footer-76",
                                                                            "head": "MuiTableCell-head-74",
                                                                            "numeric": "MuiTableCell-numeric-77",
                                                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox-79",
                                                                            "paddingDense": "MuiTableCell-paddingDense-78",
                                                                            "paddingNone": "MuiTableCell-paddingNone-80",
                                                                            "root": "MuiTableCell-root-73",
                                                                          }
                                                                        }
                                                                        numeric={false}
                                                                      >
                                                                        <td
                                                                          aria-sort={null}
                                                                          className="MuiTableCell-root-73 MuiTableCell-body-75"
                                                                        >
                                                                          5
                                                                        </td>
                                                                      </TableCell>
                                                                    </WithStyles(TableCell)>
                                                                    <WithStyles(TableCell)>
                                                                      <TableCell
                                                                        classes={
                                                                          Object {
                                                                            "body": "MuiTableCell-body-75",
                                                                            "footer": "MuiTableCell-footer-76",
                                                                            "head": "MuiTableCell-head-74",
                                                                            "numeric": "MuiTableCell-numeric-77",
                                                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox-79",
                                                                            "paddingDense": "MuiTableCell-paddingDense-78",
                                                                            "paddingNone": "MuiTableCell-paddingNone-80",
                                                                            "root": "MuiTableCell-root-73",
                                                                          }
                                                                        }
                                                                        numeric={false}
                                                                      >
                                                                        <td
                                                                          aria-sort={null}
                                                                          className="MuiTableCell-root-73 MuiTableCell-body-75"
                                                                        >
                                                                          Investor Security Engineer
                                                                        </td>
                                                                      </TableCell>
                                                                    </WithStyles(TableCell)>
                                                                  </tr>
                                                                </TableRow>
                                                              </WithStyles(TableRow)>
                                                            </tbody>
                                                          </TableBody>
                                                        </WithStyles(TableBody)>
                                                      </table>
                                                    </Table>
                                                  </WithStyles(Table)>
                                                </div>
                                              </TodosList>
                                            </Connect(TodosList)>
                                          </div>
                                        </Todos>
                                      </Route>
                                    </Switch>
                                  </div>
                                </div>
                              </TransitionMotion>
                            </RouteTransition>
                          </AnimatedSwitch>
                        </Route>
                      </RouteWrapper>
                    </RouteTransitions>
                  </Routes>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </MuiThemeProvider>
        </MuiProvider>
      </div>
    </App>
  </Provider>
</Wrapper>
`;
